#cloud-config

---
write-files:
  - path: /etc/conf.d/nfs
    permissions: '0644'
    content: |
      OPTS_RPC_MOUNTD=""
  - path: /opt/bin/etcd-waiter.sh
    owner: root
    content: |
      #! /usr/bin/bash
      until curl http://172.17.8.101:2379/v2/machines; do sleep 2; done
  - path: /opt/bin/docker-cache-waiter.sh
    owner: root
    content: |
      #! /usr/bin/bash
      until curl http://172.17.8.101:5000; do sleep 2; done
  - path: /opt/bin/kube-apiserver-waiter.sh
    owner: root
    content: |
      #! /usr/bin/bash
      until curl http://172.17.8.101:8080; do sleep 2; done
coreos:
  fleet:
    public-ip: $public_ipv4
    etcd_servers: http://172.17.8.101:2379
    metadata: "role=minion"
  flannel:
    etcd-endpoints: http://172.17.8.101:2379
    interface: eth1
  units:
    - name: rpcbind.service
      enable: true
      command: start
    - name: rpc-statd.service
      enable: true
      command: start
    - name: etcd2.service
      mask: true
    - name: etcd-waiter.service
      command: start
      content: |
        [Unit]
        Description=etcd waiter
        Wants=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=/usr/bin/chmod +x /opt/bin/etcd-waiter.sh
        ExecStart=/usr/bin/bash /opt/bin/etcd-waiter.sh
        RemainAfterExit=true
        Type=oneshot
    - name: docker-cache-waiter.service
      command: start
      content: |
        [Unit]
        Description=docker cache waiter
        Wants=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=/usr/bin/chmod +x /opt/bin/docker-cache-waiter.sh
        ExecStart=/usr/bin/bash /opt/bin/docker-cache-waiter.sh
        RemainAfterExit=true
        Type=oneshot
    - name: kube-apiserver-waiter.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes API Server waiter
        Wants=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-apiserver-waiter.sh
        ExecStart=/usr/bin/bash /opt/bin/kube-apiserver-waiter.sh
        RemainAfterExit=true
        Type=oneshot
    - name: setup-network-environment.service
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/k8s/setup-network-environment
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot
    - name: flanneld.service
      command: start
    - name: fleet.service
      command: start
    - name: docker.service
      command: start
      drop-ins:
        - name: 51-docker-mirror.conf
          content: |
            [Unit]
            # making sure that flanneld finished startup, otherwise containers
            # won't land in flannel's network...
            Require=docker-cache.service flanneld.service
            After=docker-cache.service flanneld.service
            [Service]
            Environment=DOCKER_OPTS='--registry-mirror=http://172.17.8.101:5000'
    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver-waiter.service
        After=kube-apiserver-waiter.service

        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/__RELEASE__/bin/linux/amd64/kube-proxy
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-proxy
        ExecStart=/opt/bin/kube-proxy \
          --master=172.17.8.101:8080 \
          --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver-waiter.service
        After=kube-apiserver-waiter.service

        [Service]
        EnvironmentFile=/etc/network-environment
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/__RELEASE__/bin/linux/amd64/kubelet
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kubelet
        ExecStart=/opt/bin/kubelet \
          --address=0.0.0.0 \
          --port=10250 \
          --hostname_override=$public_ipv4 \
          --api_servers=172.17.8.101:8080 \
          --allow_privileged=true \
          --cluster_dns=10.100.0.10 \
          --cluster_domain=__DNS_DOMAIN__ \
          --logtostderr=true \
          --cadvisor_port=4194 \
          --healthz_bind_address=0.0.0.0 \
          --healthz_port=10248
        Restart=always
        RestartSec=10
  update:
    group: __CHANNEL__
    reboot-strategy: off